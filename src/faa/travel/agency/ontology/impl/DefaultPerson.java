package faa.travel.agency.ontology.impl;

import faa.travel.agency.ontology.classes.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultPerson <br>
 * @version generated on Mon Apr 17 12:31:16 BST 2017 by favina
 */
public class DefaultPerson extends WrappedIndividualImpl implements Person {

    public DefaultPerson(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.le.ac.uk/travelAgencyOntology.owl#Person_Gender
     */
     
    public Collection<? extends String> getPerson_Gender() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_GENDER, String.class);
    }

    public boolean hasPerson_Gender() {
		return !getPerson_Gender().isEmpty();
    }

    public void addPerson_Gender(String newPerson_Gender) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_GENDER, newPerson_Gender);
    }

    public void removePerson_Gender(String oldPerson_Gender) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_GENDER, oldPerson_Gender);
    }


    /* ***************************************************
     * Data Property http://www.le.ac.uk/travelAgencyOntology.owl#Person_Name
     */
     
    public Collection<? extends String> getPerson_Name() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_NAME, String.class);
    }

    public boolean hasPerson_Name() {
		return !getPerson_Name().isEmpty();
    }

    public void addPerson_Name(String newPerson_Name) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_NAME, newPerson_Name);
    }

    public void removePerson_Name(String oldPerson_Name) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_NAME, oldPerson_Name);
    }


    /* ***************************************************
     * Data Property http://www.le.ac.uk/travelAgencyOntology.owl#Person_dob
     */
     
    public Collection<? extends String> getPerson_dob() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_DOB, String.class);
    }

    public boolean hasPerson_dob() {
		return !getPerson_dob().isEmpty();
    }

    public void addPerson_dob(String newPerson_dob) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_DOB, newPerson_dob);
    }

    public void removePerson_dob(String oldPerson_dob) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_DOB, oldPerson_dob);
    }


}
