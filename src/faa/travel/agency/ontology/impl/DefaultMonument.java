package faa.travel.agency.ontology.impl;

import faa.travel.agency.ontology.classes.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultMonument <br>
 * @version generated on Mon Apr 17 12:31:16 BST 2017 by favina
 */
public class DefaultMonument extends WrappedIndividualImpl implements Monument {

    public DefaultMonument(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.le.ac.uk/travelAgencyOntology.owl#recommend
     */
     
    public Collection<? extends Activity> getRecommend() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_RECOMMEND,
                                               DefaultActivity.class);
    }

    public boolean hasRecommend() {
	   return !getRecommend().isEmpty();
    }

    public void addRecommend(Activity newRecommend) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_RECOMMEND,
                                       newRecommend);
    }

    public void removeRecommend(Activity oldRecommend) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_RECOMMEND,
                                          oldRecommend);
    }


    /* ***************************************************
     * Data Property http://www.le.ac.uk/travelAgencyOntology.owl#Attraction_Location
     */
     
    public Collection<? extends String> getAttraction_Location() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTRACTION_LOCATION, String.class);
    }

    public boolean hasAttraction_Location() {
		return !getAttraction_Location().isEmpty();
    }

    public void addAttraction_Location(String newAttraction_Location) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTRACTION_LOCATION, newAttraction_Location);
    }

    public void removeAttraction_Location(String oldAttraction_Location) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTRACTION_LOCATION, oldAttraction_Location);
    }


    /* ***************************************************
     * Data Property http://www.le.ac.uk/travelAgencyOntology.owl#Attraction_Name
     */
     
    public Collection<? extends String> getAttraction_Name() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTRACTION_NAME, String.class);
    }

    public boolean hasAttraction_Name() {
		return !getAttraction_Name().isEmpty();
    }

    public void addAttraction_Name(String newAttraction_Name) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTRACTION_NAME, newAttraction_Name);
    }

    public void removeAttraction_Name(String oldAttraction_Name) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ATTRACTION_NAME, oldAttraction_Name);
    }


}
