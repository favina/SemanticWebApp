package faa.travel.agency.ontology.classes;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: City <br>
 * @version generated on Mon Apr 17 12:31:16 BST 2017 by favina
 */

public interface City extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.le.ac.uk/travelAgencyOntology.owl#hasToDo
     */
     
    /**
     * Gets all property values for the hasToDo property.<p>
     * 
     * @returns a collection of values for the hasToDo property.
     */
    Collection<? extends Activity> getHasToDo();

    /**
     * Checks if the class has a hasToDo property value.<p>
     * 
     * @return true if there is a hasToDo property value.
     */
    boolean hasHasToDo();

    /**
     * Adds a hasToDo property value.<p>
     * 
     * @param newHasToDo the hasToDo property value to be added
     */
    void addHasToDo(Activity newHasToDo);

    /**
     * Removes a hasToDo property value.<p>
     * 
     * @param oldHasToDo the hasToDo property value to be removed.
     */
    void removeHasToDo(Activity oldHasToDo);


    /* ***************************************************
     * Property http://www.le.ac.uk/travelAgencyOntology.owl#toVisit
     */
     
    /**
     * Gets all property values for the toVisit property.<p>
     * 
     * @returns a collection of values for the toVisit property.
     */
    Collection<? extends Place> getToVisit();

    /**
     * Checks if the class has a toVisit property value.<p>
     * 
     * @return true if there is a toVisit property value.
     */
    boolean hasToVisit();

    /**
     * Adds a toVisit property value.<p>
     * 
     * @param newToVisit the toVisit property value to be added
     */
    void addToVisit(Place newToVisit);

    /**
     * Removes a toVisit property value.<p>
     * 
     * @param oldToVisit the toVisit property value to be removed.
     */
    void removeToVisit(Place oldToVisit);


    /* ***************************************************
     * Property http://www.le.ac.uk/travelAgencyOntology.owl#City_ID
     */
     
    /**
     * Gets all property values for the City_ID property.<p>
     * 
     * @returns a collection of values for the City_ID property.
     */
    Collection<? extends Integer> getCity_ID();

    /**
     * Checks if the class has a City_ID property value.<p>
     * 
     * @return true if there is a City_ID property value.
     */
    boolean hasCity_ID();

    /**
     * Adds a City_ID property value.<p>
     * 
     * @param newCity_ID the City_ID property value to be added
     */
    void addCity_ID(Integer newCity_ID);

    /**
     * Removes a City_ID property value.<p>
     * 
     * @param oldCity_ID the City_ID property value to be removed.
     */
    void removeCity_ID(Integer oldCity_ID);



    /* ***************************************************
     * Property http://www.le.ac.uk/travelAgencyOntology.owl#City_Name
     */
     
    /**
     * Gets all property values for the City_Name property.<p>
     * 
     * @returns a collection of values for the City_Name property.
     */
    Collection<? extends String> getCity_Name();

    /**
     * Checks if the class has a City_Name property value.<p>
     * 
     * @return true if there is a City_Name property value.
     */
    boolean hasCity_Name();

    /**
     * Adds a City_Name property value.<p>
     * 
     * @param newCity_Name the City_Name property value to be added
     */
    void addCity_Name(String newCity_Name);

    /**
     * Removes a City_Name property value.<p>
     * 
     * @param oldCity_Name the City_Name property value to be removed.
     */
    void removeCity_Name(String oldCity_Name);



    /* ***************************************************
     * Property http://www.le.ac.uk/travelAgencyOntology.owl#City_Type
     */
     
    /**
     * Gets all property values for the City_Type property.<p>
     * 
     * @returns a collection of values for the City_Type property.
     */
    Collection<? extends String> getCity_Type();

    /**
     * Checks if the class has a City_Type property value.<p>
     * 
     * @return true if there is a City_Type property value.
     */
    boolean hasCity_Type();

    /**
     * Adds a City_Type property value.<p>
     * 
     * @param newCity_Type the City_Type property value to be added
     */
    void addCity_Type(String newCity_Type);

    /**
     * Removes a City_Type property value.<p>
     * 
     * @param oldCity_Type the City_Type property value to be removed.
     */
    void removeCity_Type(String oldCity_Type);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
